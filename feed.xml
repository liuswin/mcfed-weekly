<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://liuswin.github.io//mcfed-weekly/feed.xml" rel="self" type="application/atom+xml" /><link href="https://liuswin.github.io//mcfed-weekly/" rel="alternate" type="text/html" /><updated>2020-05-22T01:58:53+00:00</updated><id>https://liuswin.github.io//mcfed-weekly/feed.xml</id><title type="html">MCFED</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Github Actions</title><link href="https://liuswin.github.io//mcfed-weekly/2020/05/17/Github-Actions.html" rel="alternate" type="text/html" title="Github Actions" /><published>2020-05-17T06:22:45+00:00</published><updated>2020-05-17T06:22:45+00:00</updated><id>https://liuswin.github.io//mcfed-weekly/2020/05/17/Github%20Actions</id><content type="html" xml:base="https://liuswin.github.io//mcfed-weekly/2020/05/17/Github-Actions.html">&lt;div style=&quot;position: relative; height: 0; z-index: -1;&quot;&gt;&lt;img alt=&quot;github actions&quot; src=&quot;https://github.githubassets.com/images/modules/actions/actions-hero.png&quot; style=&quot;position: absolute; top: 0; right: 0;&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;github-actions&quot;&gt;Github Actions&lt;/h2&gt;

&lt;p&gt;GitHub Actions可帮助您在存储代码的同一位置自动执行软件开发工作流程，并就请求请求和问题进行协作。您可以编写单个任务（称为操作），并将其组合以创建自定义工作流程。工作流是自定义的自动化流程，您可以在存储库中对其进行设置，以在GitHub上构建，测试，打包，发布或部署任何代码项目。 借助GitHub Actions，您可以直接在存储库中构建端到端的持续集成（CI）和持续部署（CD）功能。&lt;/p&gt;

&lt;h2 id=&quot;核心概念&quot;&gt;&lt;a href=&quot;https://help.github.com/en/actions/getting-started-with-github-actions/core-concepts-for-github-actions&quot;&gt;核心概念&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;CI&lt;/strong&gt;&lt;br /&gt;
持续集成指的是，频繁地将代码集成到主干，集成到主干之前，必须通过自动化测试。
优点：1、快速发现错误。2、防止分支大幅偏离主干&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CD&lt;/strong&gt;&lt;br /&gt;
持续部署是持续交付的下一步，指的是代码通过评审后，自动部署到生产环境&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Workflow&lt;/strong&gt;&lt;br /&gt;
在 Github 上配置构建、测试、打包、发布或部署的自动化工作流程，工作流由一个或多个 Job 组成&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Job&lt;/strong&gt;&lt;br /&gt;
由多个步骤组成的，工作流程中的一个作业步骤，可以定义工作流文件中作业的运行方式和依赖关系&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step&lt;/strong&gt;&lt;br /&gt;
步骤可以运行命令或 action 的单个任务&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Action&lt;/strong&gt;&lt;br /&gt;
单独的任务，是工作流中最小的可移植构建快。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event&lt;/strong&gt;&lt;br /&gt;
触发工作流程运行的特定事件&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Runner&lt;/strong&gt;&lt;br /&gt;
github 分配的用来执行 workflow 的构建服务器 (也可以自建 runner)&lt;/p&gt;

&lt;h2 id=&quot;配置文件&quot;&gt;配置文件&lt;/h2&gt;

&lt;p&gt;Github Actions 的 &lt;strong&gt;&lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions&quot;&gt;Workflow file&lt;/a&gt;&lt;/strong&gt;（配置文件）采用的是 YAML 类型的文件，文件存放在仓库根目录的 &lt;code class=&quot;highlighter-rouge&quot;&gt;.github/workflows&lt;/code&gt; 目录中。仓库中存放至少一个作业。Github 发现仓库中存在配置文件就会在特定的事件触发后，自动执行配置的工作流程&lt;/p&gt;

&lt;p&gt;YAML 学习资源：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/07/yaml.html&quot;&gt;YAML 语言教程 - 阮一峰&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.codeproject.com/Articles/1214409/Learn-YAML-in-five-minutes&quot;&gt;Learn YAML in five minutes&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;配置字段&quot;&gt;配置字段&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;name&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; 字段是 workflow 的名称。如果省略该字段，Github默认使用workflow文件名称&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;on&lt;br /&gt;
required &lt;code class=&quot;highlighter-rouge&quot;&gt;on&lt;/code&gt; 字段指定触发 workflow 的条件，通常是单个事件名称，或者事件数组，可以关联特定文件，标记或分支更改。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;单个事件：&lt;/p&gt;
&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Trigger on push&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;事件列表：&lt;/p&gt;
&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Trigger the workflow on push or pull request&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;多种类型示例：&lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onevent_nametypes&quot;&gt;活动、外部事件、定时运行等&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Trigger the workflow on push or pull request,&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# but only for the master branch&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Also trigger on page_build, as well as release created events&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;page_build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# This configuration does not affect the page_build event abve&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;created&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;jobs&lt;br /&gt;
workflow 文件由一个或多个 &lt;code class=&quot;highlighter-rouge&quot;&gt;job&lt;/code&gt; 组成，每个作业必须包含一个ID，所有的 &lt;code class=&quot;highlighter-rouge&quot;&gt;job&lt;/code&gt; 都是并行的，但往往都会有依赖关系。下面 &lt;code class=&quot;highlighter-rouge&quot;&gt;my_first_job&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;my_second_job&lt;/code&gt; 就是每个 Job 的 ID, 必须以字母或 &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; 开头，并且仅包含字母数字字符&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;my_first_job&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;My first job&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;my_second_job&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;My second job&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;jobs.&lt;job_id&gt;.name&lt;/job_id&gt;&lt;/li&gt;
  &lt;li&gt;jobs.&lt;jobid&gt;.needs&lt;br /&gt;
`needs` 指定 `job` 依赖关系&lt;/jobid&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 测试通过后，才能部署&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;needs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;jobs.&lt;job_id&gt;.runs-on&lt;br /&gt;
指定 `github actions` 的运行环境，github 默认会分配一个[服务器](https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners)给我们的构建工作流程使用&lt;/job_id&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Virtual environment&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;YAML workflow label&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Windows Server 2019&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;windows-latest or windows-2019&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Ubuntu 18.04&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ubuntu-latest or ubuntu-18.04&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Ubuntu 16.04&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ubuntu-16.04&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;macOS Catalina 10.15&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;macos-latest or macos-10.15&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;jobs.&lt;job_id&gt;.steps
`job` 包含一系列称为 steps 的任务。step可以运行命令，安装依赖、编译代码等&lt;/job_id&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;jobs.&lt;job_id&gt;.steps.name&lt;/job_id&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;jobs.&lt;job_id&gt;.setps.run&lt;br /&gt;
step 需要在 `shell` 执行的命令&lt;/job_id&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install dependencies&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;install and build&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;npm install&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;npm run build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;jobs.&lt;job_id&gt;.steps.uses&lt;br /&gt;
选择使用已有的 `action`，有利于代码复用。&lt;/job_id&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;GitHub Checkout&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;实战&quot;&gt;实战&lt;/h2&gt;

&lt;p&gt;部署 create-react-app 生成的项目：&lt;a href=&quot;https://github.com/liuswin/github-actions-demo&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Getting Started with Sleek</title><link href="https://liuswin.github.io//mcfed-weekly/2017/11/26/getting-started.html" rel="alternate" type="text/html" title="Getting Started with Sleek" /><published>2017-11-26T00:00:00+00:00</published><updated>2017-11-26T00:00:00+00:00</updated><id>https://liuswin.github.io//mcfed-weekly/2017/11/26/getting-started</id><content type="html" xml:base="https://liuswin.github.io//mcfed-weekly/2017/11/26/getting-started.html">&lt;h1 id=&quot;getting-started&quot;&gt;Getting started&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt; can automatically generate and serve the website for you.
Let’s say you have a username/organisation &lt;code class=&quot;highlighter-rouge&quot;&gt;my-org&lt;/code&gt; and project &lt;code class=&quot;highlighter-rouge&quot;&gt;my-proj&lt;/code&gt;; if you locate Jekyll source under &lt;code class=&quot;highlighter-rouge&quot;&gt;blog&lt;/code&gt; folder of master branch in your repo &lt;code class=&quot;highlighter-rouge&quot;&gt;github.com/my-org/my-proj&lt;/code&gt;, the website will be served on &lt;code class=&quot;highlighter-rouge&quot;&gt;my-org.github.io/my-proj&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Just download or fork and clone the source from &lt;a href=&quot;https://github.com/janczizikow/sleek/&quot;&gt;github.com/janczizikow/sleek&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Make sure your local machine has ruby and node&lt;/li&gt;
  &lt;li&gt;Edit site settings in  &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file according to your project.&lt;/li&gt;
  &lt;li&gt;Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;favicons&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/logo.svg&lt;/code&gt; with your own logo.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that you might have to adjust some CSS depending on the width and height of your logo. You can find Header / Navigation related SCSS in &lt;code class=&quot;highlighter-rouge&quot;&gt;_sass/layout/nav.scss&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;writing-content&quot;&gt;Writing content&lt;/h2&gt;

&lt;h3 id=&quot;posts&quot;&gt;Posts&lt;/h3&gt;

&lt;p&gt;Create a new Markdown file such as &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-01-13-my-post.md&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;_post&lt;/code&gt; folder. Configure YAML Front Matter (stuff between &lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# needs to be post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Getting Started with Sleek&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# title of your post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;featured-img&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sleek&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#optional - if you want you can include hero image&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;images&quot;&gt;Images&lt;/h4&gt;

&lt;p&gt;In case you want to add a hero image to the post, apart from changing &lt;code class=&quot;highlighter-rouge&quot;&gt;featured-img&lt;/code&gt; in YAML, you also need to add the image file to the project. To do so, just upload an image in &lt;code class=&quot;highlighter-rouge&quot;&gt;.jpg&lt;/code&gt; format to &lt;code class=&quot;highlighter-rouge&quot;&gt;_img&lt;/code&gt; folder. The name must before the &lt;code class=&quot;highlighter-rouge&quot;&gt;.jpg&lt;/code&gt; file extension has to match with &lt;code class=&quot;highlighter-rouge&quot;&gt;featured-img&lt;/code&gt; in YAML. Next, run &lt;code class=&quot;highlighter-rouge&quot;&gt;gulp img&lt;/code&gt; from command line to generate optimized version of the image and all the thumbnails. You have to restart  the jekyll server to see the changes. Sleek uses &lt;a href=&quot;https://github.com/aFarkas/lazysizes&quot;&gt;Lazy Sizes&lt;/a&gt; Lazy Loader for loading images. Check the link for more info. Lazy Sizes doesnt’t require any configuration and it’s going to be included in your bundled js file.&lt;/p&gt;

&lt;h3 id=&quot;pages&quot;&gt;Pages&lt;/h3&gt;

&lt;p&gt;The home page is located under &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt; file. To change the content or design you have to edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;default.html&lt;/code&gt; file in &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;In order to add a new page, create a new html or markdown file under root directory or inside &lt;code class=&quot;highlighter-rouge&quot;&gt;_pages&lt;/code&gt; folder. To add a link to the page, edit &lt;code class=&quot;highlighter-rouge&quot;&gt;navigation&lt;/code&gt; setting in &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;images-todo&quot;&gt;Images TODO&lt;/h3&gt;

&lt;p&gt;Introduce gulp optimization&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Breakpoint&lt;/th&gt;
      &lt;th&gt;Image Type&lt;/th&gt;
      &lt;th&gt;Width&lt;/th&gt;
      &lt;th&gt;Retina&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;xs&lt;/td&gt;
      &lt;td&gt;Post Thumb&lt;/td&gt;
      &lt;td&gt;535px&lt;/td&gt;
      &lt;td&gt;1070px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sm&lt;/td&gt;
      &lt;td&gt;Post Thumb&lt;/td&gt;
      &lt;td&gt;500px&lt;/td&gt;
      &lt;td&gt;1000px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;md&lt;/td&gt;
      &lt;td&gt;Post Thumb&lt;/td&gt;
      &lt;td&gt;329.375px&lt;/td&gt;
      &lt;td&gt;658.75px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lg&lt;/td&gt;
      &lt;td&gt;Post Thumb&lt;/td&gt;
      &lt;td&gt;445.625px&lt;/td&gt;
      &lt;td&gt;891.25px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xl&lt;/td&gt;
      &lt;td&gt;Post Thumb&lt;/td&gt;
      &lt;td&gt;353.125px&lt;/td&gt;
      &lt;td&gt;706.25px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Breakpoint&lt;/th&gt;
      &lt;th&gt;Image Type&lt;/th&gt;
      &lt;th&gt;Width&lt;/th&gt;
      &lt;th&gt;Retina&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;xs&lt;/td&gt;
      &lt;td&gt;Post Hero&lt;/td&gt;
      &lt;td&gt;535px&lt;/td&gt;
      &lt;td&gt;1070px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sm&lt;/td&gt;
      &lt;td&gt;Post Hero&lt;/td&gt;
      &lt;td&gt;500px&lt;/td&gt;
      &lt;td&gt;1000px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;md&lt;/td&gt;
      &lt;td&gt;Post Hero&lt;/td&gt;
      &lt;td&gt;329.375px&lt;/td&gt;
      &lt;td&gt;658.75px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lg&lt;/td&gt;
      &lt;td&gt;Post Hero&lt;/td&gt;
      &lt;td&gt;445.625px&lt;/td&gt;
      &lt;td&gt;891.25px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xl&lt;/td&gt;
      &lt;td&gt;Post Hero&lt;/td&gt;
      &lt;td&gt;353.125px&lt;/td&gt;
      &lt;td&gt;706.25px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;mathjax&quot;&gt;MathJax&lt;/h3&gt;

&lt;p&gt;If you want to use &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax&lt;/a&gt; in your posts, add &lt;code class=&quot;highlighter-rouge&quot;&gt;mathjax: true&lt;/code&gt; in &lt;a href=&quot;https://jekyllrb.com/docs/frontmatter/&quot;&gt;YAML front matter&lt;/a&gt; of your post:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Blog Post with MathJax&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;featured-img&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;sleek&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# optional - if you want you can include name of hero image&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;mathjax&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# add this line in order to enable MathJax in the post&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;example&quot;&gt;Example&lt;/h4&gt;

&lt;p&gt;In N-dimensional simplex noise, the squared kernel summation radius $r^2$ is $\frac 1 2$
for all values of N. This is because the edge length of the N-simplex $s = \sqrt {\frac {N} {N + 1}}$
divides out of the N-simplex height $h = s \sqrt {\frac {N + 1} {2N}}$.
The kerel summation radius $r$ is equal to the N-simplex height $h$.&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;r = h = \sqrt{\frac {1} {2}} = \sqrt{\frac {N} {N+1}} \sqrt{\frac {N+1} {2N}}&lt;/script&gt;
Happy hacking!&lt;/p&gt;</content><author><name></name></author><summary type="html">Getting started</summary></entry></feed>